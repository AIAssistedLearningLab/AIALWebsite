name: Build Website for Caller
on:
  workflow_call:
    inputs:
      config:
        description: 'A comma-delimited list of config files to use when building the site'
        required: true
        type: string
      branch:
        description: 'The branch to store the website artifacts in'
        required: true
        type: string
      save:
        description: 'Whether to upload the produced artifact to the github pages group'
        required: false
        default: false
        type: boolean

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: [ "self-hosted" ]
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          path: main
      - name: Checkout gh-built branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          path: site
      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.4'
      - name: Install dependencies
        run: bundle install
        working-directory: main
      - name: Build site for github
        run: bundle exec jekyll build --config ${{ inputs.config }} -d ../site
        working-directory: main
      - name: Add all built files
        run: git -C site add -A
      - name: Commit newly built files
        run: git -C site commit -m "Update site"
      - name: Upload github pages artifact
        if: ${{ inputs.save }}
        uses: actions/upload-pages-artifact@v1
        with:
          path: site
      - name: Push the new changes
        run: git -C site push 
  # Deployment job
  deploy:
    if: ${{ inputs.save }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: [ self-hosted ]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
