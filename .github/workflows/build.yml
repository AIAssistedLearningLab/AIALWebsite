name: Build Website for Caller
on:
  workflow_call:
    inputs:
      config:
        description: 'A comma-delimited list of config files to use when building the site'
        required: true
        type: string
      branch:
        description: 'The branch to store the website artifacts in'
        required: false
        default: ''
        type: string
      deploy:
        description: 'Whether to upload the produced artifact, and then deploy to the github pages environment'
        required: false
        default: false
        type: boolean

jobs:
  build:
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: write
      id-token: write
    runs-on: [ "self-hosted" ]
    steps:
      # Because this runs on a self-hosted runner, it's possible the environment
      # isn't clean so we need to clean up beforehand
      - name: Clean the environment
        run: |
          rm -rf ./* || true
          rm -rf ./.??* || true

      # Checkout the main branch
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          path: main
  
      # If provided a branch to use as a target to overwrite, checkout that branch
      # to the site folder so that we can overwrite it after building
      - if: ${{ inputs.branch }}
        name: Checkout gh-built branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          path: site
  
      # If not provided a branch to use as a target and if they request an upload
      # make a folder that can be used to store the built copy of the website
      - if: ${{ !inputs.branch && inputs.deploy }}
        name: Make build folder for deployment
        run: mkdir site 

      # Setup ruby on the runner so that we can run jekyll
      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.4'

      # Install all the necessary dependencies to build the website
      - name: Install dependencies
        run: bundle install
        working-directory: main
  
      # Build the website into the site folder from inside the main folder 
      # so that we can either upload the site or push it to a particular branch
      - name: Build site for github
        run: bundle exec jekyll build --config ${{ inputs.config }} -d ../site
        working-directory: main

      # If the user requested that we push the changes to a particular branch,
      # configure git before the push that we are about to do so that we don't
      # get complaints, then commit all the changes that were made in the site directory
      # (the -C flag tells git to perform these commands in the site directory),
      # and then push the changes to the branch that was requested
      - if: ${{ inputs.branch }}
        name: Commit and push newly built files to ${{ inputs.branch }}
        run: |
          git config --global user.name 'Branch Builder'
          git config --global user.email 'branch-builder@users.noreply.github.ncsu.edu'
          git -C site add -A
          git -C site commit -m 'Update ${{ inputs.branch }}'
          git -C site push
  
      # If the user requests that we deploy the website to github pages, 
      # run the upload github pages artifact action using the site folder as the target 
      # as that's where the site was built to
      - if: ${{ inputs.deploy }}
        name: Upload github pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: site
        
  # Deployment job
  # If the user requests a deploy to github pages, then use the deploy pages action
  # to 
  deploy:
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      id-token: write
      # deployments: write
      pages: write
    if: ${{ inputs.deploy }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: [ self-hosted ]
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
